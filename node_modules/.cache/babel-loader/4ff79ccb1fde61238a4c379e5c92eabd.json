{"ast":null,"code":"var _jsxFileName = \"/home/dhirack/projects/To-Do-List-App-React-V2-/src/components/ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData(task),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/dhirack/projects/To-Do-List-App-React-V2-/src/components/ToDo.jsx"],"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","toDo","markDone","setUpdateData","deleteTask","sort","a","b","id","map","task","index","status","title","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,aADF,EACiBC,KADjB,EACwBC,UADxB,QAEO,mCAFP;;;;AAIA,MAAMC,IAAI,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,aAAlB;AAAiCC,IAAAA;AAAjC,GAAkD;AAC9D,sBACE;AAAA,cACGH,IAAI,IAAIA,IAAI,CACZI,IADQ,CACH,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAT,GAAc,CAAd,GAAkB,CAAC,CAD1B,EAERC,GAFQ,CAEH,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrB,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAGD,IAAI,CAACE,MAAL,GAAc,MAAd,GAAuB,EAAxC;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,YAAhB;AAAA,wBAA8BD,KAAK,GAAG;AAAtC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC,UAAhB;AAAA,wBAA4BD,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAM,cAAA,KAAK,EAAC,2BAAZ;AACE,cAAA,OAAO,EAAIC,CAAD,IAAOZ,QAAQ,CAACQ,IAAI,CAACF,EAAN,CAD3B;AAAA,qCAGE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEX;AAAvB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,oBADF,EAOGa,IAAI,CAACE,MAAL,GAAc,IAAd,gBACC;AAAM,cAAA,KAAK,EAAC,MAAZ;AACE,cAAA,OAAO,EAAG,MAAMT,aAAa,CAACO,IAAD,CAD/B;AAAA,qCAGE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEZ;AAAvB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeE;AAAM,cAAA,KAAK,EAAC,QAAZ;AACE,cAAA,OAAO,EAAE,MAAMM,UAAU,CAACM,IAAI,CAACF,EAAN,CAD3B;AAAA,qCAGE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAqBW,IAAI,CAACF,EAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAlCQ;AADX,mBADF;AAwCD,CAzCD;;KAAMR,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleCheck, faPen, faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\n  return(\n    <>\n      {toDo && toDo\n      .sort((a, b) => a.id > b.id ? 1 : -1)\n      .map( (task, index) => {\n        return(\n          <React.Fragment key={task.id}>\n            <div className=\"col taskBg\">\n              <div className={ task.status ? 'done' : '' }>\n                <span className=\"taskNumber\">{index + 1}</span>\n                <span className=\"taskText\">{task.title}</span>\n              </div>\n              <div className=\"iconsWrap\">\n                <span title=\"Completed / Not Completed\"\n                  onClick={ (e) => markDone(task.id) }\n                >\n                  <FontAwesomeIcon icon={faCircleCheck} />\n                </span>\n\n                {task.status ? null : (\n                  <span title=\"Edit\"\n                    onClick={ () => setUpdateData(task) }\n                  >\n                    <FontAwesomeIcon icon={faPen} />\n                  </span>\n                )}\n\n                <span title=\"Delete\"\n                  onClick={() => deleteTask(task.id)}\n                >\n                  <FontAwesomeIcon icon={faTrashCan} />\n                </span>\n              </div>\n            </div>\n          </React.Fragment>\n        )\n      })\n      }  \n    </>\n  )\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}